{"name":"Zinx","body":"# Zinx\r\n\r\nZinx is a Ruby DSL for the [Sphinx Search Engine](http://www.sphinxsearch.com) (which is used in a lot of [big sites](http://sphinxsearch.com/info/powered/)). It is a simple wrapper around the oficial Ruby API.\r\nThe main goal is to have a more friendly way of searching Sphinx.\r\n\r\nMost methods are just a wrap around the corresponding Sphinx API method. Best thing to do is to read the code, it's quite simple.\r\n\r\n---\r\n\r\n## Install\r\n\r\n\tgem install zinx\r\n\r\n## Examples\r\n\r\n### Configuring\r\n\r\n\tmatch_mode :extended\r\n\tranking_mode :word_count\r\n\tfield_weight 'field1', 1000\r\n\tfield_weights {'field1' => 1000, 'field2' => 50}\r\n\tindex_weight 'index1', 400\r\n\tindex_weights {'index2' => 100, 'index3' => 231}\r\n\r\n### Simple Search\r\n\r\n\tresults = search 'simple'\r\n\r\n### Filtering\r\n\r\n\tresults = search 'simple', :filter => {'field' => 'value'}\r\n\t# or\r\n\tresults = search 'simple' do\r\n\t\tfilter 'field', 'value'\r\n\tend\r\n\r\n### Sorting\r\n\r\n\tresults = search 'simple', :sort => {:expr => '@weight + 10'}\r\n\t# or\r\n\tresults = search 'simple' do\r\n\t\tsort :expr, '@weight + 10'\r\n\tend\r\n\r\n### Grouping\r\n\r\n\tresults = search 'simple', :group => {:attr => 'field'}\r\n\t# or\r\n\tresults = search 'simple' do\r\n\t\tgroup :attr, 'field'\r\n\tend\r\n\r\n### Select List\r\n\r\n\tresults = search 'simple', :select => 'field1, field2, field3'\r\n\t# or\r\n\tresults = search 'simple' do\r\n\t\tselect 'field1, field2, field3'\r\n\tend\r\n\r\n### Multiple Queries\r\n\r\n\t# this will return an array of 3 results\r\n\tresults = search 'simple' do\r\n\t\tfilter 'field', 'value'\r\n\t\tsort :expr, '@weight + 10'\r\n\t\tadd_query\r\n\r\n\t\tfilter 'field2', 'value2'\r\n\t\tgroup :attr, 'field2'\r\n\t\tadd_query\r\n\r\n\t\treset_groups\r\n\t\tselect 'SUM(1) AS total'\r\n\t\tgroup :attr, 'total'\r\n\t\tadd_query\r\n\tend\r\n\r\n### Accessing Result Information\r\n\r\n\tresults = search 'simple', :select => 'field1, field2, @weight'\r\n\t# error?\r\n\tputs results.first.error\r\n\t# matches\r\n\tputs results.matches\r\n\t# accessig fields\r\n\tputs results.matches.first.field1\r\n\tputs results.matches.first.weight","tagline":"Simple Sphinx Search DSL in Ruby","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}